{"version":3,"file":"urbantkmap.js","sources":["../src/environment.ts","../src/geoutils.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec2.js","../src/camera.ts","../node_modules/d3-scale-chromatic/src/colors.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-scale-chromatic/src/ramp.js","../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","../src/constants.ts","../src/colormap.ts","../node_modules/tslib/tslib.es6.js","../src/data-loader.ts","../src/data-api.ts","../src/key-events.ts","../src/layer.ts","../src/map-style.ts","../src/shaders/line.vs","../src/shaders/line.fs","../src/line-layer.ts","../src/shaders/point.vs","../src/shaders/point.fs","../src/point-layer.ts","../src/shaders/triangle2D.vs","../src/shaders/triangle2D.fs","../src/shaders/triangle3D.vs","../src/shaders/triangle3D.fs","../src/shaders/line3D.vs","../src/shaders/line3D.fs","../src/triangle-layer.ts","../src/layer-manager.ts","../src/mouse-events.ts","../src/mapview.ts"],"sourcesContent":["export class Environment {\r\n  // App environment parameters\r\n  public static backend = 'localhost';\r\n  public static dataFolder = '../data'\r\n\r\n  /**\r\n   * Set environment parameters\r\n   * @param {{backend: string, dataFolder: string}} env Environment parameters\r\n   */\r\n  public static setEnvironment(env: {backend: string, dataFolder: string}): void {\r\n    Environment.backend = env.backend;\r\n    Environment.dataFolder = env.dataFolder;\r\n  }\r\n}","\r\nexport abstract class GeoUtils {\r\n  static res = 256.0; \r\n  static wLevel = 22;\r\n  /**\r\n   * Converts from lat, lng to world coordinates\r\n   * @param {number} latitude the latitude of the point\r\n   * @param {number} longitude the longitude of the point\r\n   */\r\n  public static latLng2Coord_old(latitude: number, longitude: number): number[] {\r\n    const pi_4 = 12.56637061435917295385057353311801153678867759750042328389;\r\n    const pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\n\r\n    const sinLatitude = Math.sin(latitude * pi_180);\r\n    const pixelY = 256.0 - ((0.5 - Math.log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n    const pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n    return [pixelX, pixelY];\r\n  }\r\n\r\n  public static latLng2Coord(latitude: number,longitude: number): number[]{\r\n    let y = 0;\r\n    if (latitude == 90.0) {\r\n        y = GeoUtils.res;\r\n    } else if (latitude == -90.0) {\r\n        y = 0.0;\r\n    } else {\r\n        y = (Math.PI - Math.atanh(Math.sin(latitude * Math.PI / 180))) / Math.PI * GeoUtils.res / 2.0;\r\n    }\r\n\r\n    return [\r\n        y * Math.pow(2, GeoUtils.wLevel),\r\n        -(longitude + 180.0) / 360.0 * GeoUtils.res * Math.pow(2, GeoUtils.wLevel), \r\n    ];\r\n  }\r\n  \r\n\r\n  /**\r\n   * Converts from world coordinates to lat, lng\r\n   * @param {number} x the x coordinate of the point\r\n   * @param {number} y the y coordinate of the point\r\n   */\r\n  public static coord2LatLng_old(x: number, y: number): number[] {\r\n    const pi_4 = 12.56637061435917295385057353311801153678867759750042328389;\r\n    const pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\n\r\n    const longitude = ((x / GeoUtils.res) * 360.0) - 180.0;\r\n    let latitude = (256.0 - y) / GeoUtils.res;\r\n    latitude = Math.exp((0.5 - latitude) * pi_4);\r\n    latitude = (latitude - 1.0) / (1.0 + latitude);\r\n    latitude = Math.asin(latitude) / pi_180;\r\n    return [latitude, longitude];\r\n  }\r\n\r\n  public static coord2LatLng(x: number, y: number): number[] {\r\n    return [\r\n        Math.atan(Math.sinh(Math.PI * (1 - y / GeoUtils.wLevel / 128))) * 180 / Math.PI, \r\n        x * 360 / GeoUtils.wLevel / GeoUtils.res - 180\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Computes the ground resolution\r\n   * @param {number} lat the latitude value\r\n   * @param {number} lng the longitude value\r\n   * @param {number} zoom the zoom leevl\r\n   */\r\n  public static groundResolution(lat: number, lng: number, zoom: number): number {\r\n    return Math.cos(lat * Math.PI / 180) * 6378137 * 2 * Math.PI / Math.pow(2, zoom);\r\n  }\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import { GeoUtils } from './geoutils';\r\nimport { vec2, vec3, mat4 } from 'gl-matrix';\r\n\r\n/**\r\n * 3D Camera representation\r\n */\r\nexport class Camera {\r\n    // View parameters\r\n    protected wOrigin: vec2 = vec2.create();\r\n    protected wEye: vec3 = vec3.create();\r\n    protected wEyeDir: vec3 = vec3.create();\r\n    protected wEyeLength: number;\r\n    protected wLookAt: vec3 = vec3.create();\r\n    protected wUp: vec3 = vec3.create();\r\n    protected wNear: number;\r\n    protected wFar: number;\r\n\r\n    // 1 unit in worldspace equals to {groundRes} meters in the z-axis\r\n    protected groundRes: number;\r\n    protected fovy = 45 * Math.PI / 180.0;\r\n\r\n    // Transformation matrices\r\n    protected mProjectionMatrix: mat4 = mat4.create();\r\n    protected mViewMatrix: mat4 = mat4.create();\r\n    protected mModelMatrix: mat4 = mat4.create();\r\n\r\n    // view resolution\r\n    private viewportWidth: number;\r\n    private viewportHeight: number;\r\n\r\n    /**\r\n     * The Camera constructor\r\n     */\r\n    constructor(wx: number, wy: number) {\r\n        this.groundRes = GeoUtils.groundResolution(wx, wy, 10);\r\n        // console.log('--->', wx, wy, this.groundRes)\r\n        // z-values start from here are in meters\r\n        this.wNear = 0.01;\r\n        this.wFar = 1e9 / this.groundRes;\r\n\r\n        const projectedCenter = [0, 0];\r\n        this.wOrigin = vec2.fromValues(wx, wy);\r\n        this.wLookAt = vec3.fromValues(projectedCenter[0], projectedCenter[1], 0);\r\n        this.wEye = vec3.fromValues(projectedCenter[0], projectedCenter[1], this.groundRes / 10);\r\n        this.zScaling(1 / this.groundRes);\r\n\r\n        // meter is not longer used in the remaining code\r\n        this.wUp = vec3.fromValues(0, 1, 0);\r\n    }\r\n\r\n    getProjectionMatrix(): Float32Array | number[] {\r\n        return this.mProjectionMatrix;\r\n    }\r\n\r\n    getViewMatrix(): Float32Array | number[] {\r\n        return this.mViewMatrix;\r\n    }\r\n\r\n    getModelViewMatrix(): Float32Array | number[] {\r\n        const modelViewMatrix = mat4.mul(mat4.create(), this.mViewMatrix, this.mModelMatrix);\r\n        return modelViewMatrix;\r\n    }\r\n\r\n    getWorldOrigin(): Float32Array | number[] {\r\n        return this.wOrigin;\r\n    }\r\n\r\n    getEye(): Float32Array | number[] {\r\n        return this.wEye;\r\n    }\r\n\r\n    getGroundResolution(): number {\r\n        return this.groundRes;\r\n    }\r\n\r\n    setViewportResolution(x: number, y: number): void {\r\n        this.viewportWidth = x;\r\n        this.viewportHeight = y;\r\n    }\r\n\r\n    getViewportResolution(): number[] {\r\n        return [\r\n            this.viewportWidth,\r\n            this.viewportHeight\r\n        ];\r\n    }\r\n\r\n    updateEyeDirAndLen(): void {\r\n        vec3.sub(this.wEyeDir, this.wLookAt, this.wEye);\r\n        this.wEyeLength = vec3.length(this.wEyeDir);\r\n        vec3.normalize(this.wEyeDir, this.wEyeDir);\r\n    }\r\n\r\n    zScaling(scale: number): void {\r\n        this.wEye[2] = this.wEye[2] * scale;\r\n        this.wLookAt[2] = this.wLookAt[2] * scale;\r\n\r\n        this.updateEyeDirAndLen();\r\n    }\r\n\r\n    zoom(delta: number, x: number, y: number): void {\r\n        delta = delta < 0 ? 0.003 : -0.003;\r\n\r\n        const dir = this.screenCoordToWorldDir(x, y);\r\n\r\n        // this.wEye += dir * delta;\r\n        vec3.scaleAndAdd(this.wEye, this.wEye, dir, delta);\r\n        // this.wLookAt = this.wEye + this.wEyeDir * this.wEyeLength;\r\n        vec3.scaleAndAdd(this.wLookAt, this.wEye, this.wEyeDir, this.wEyeLength);\r\n    }\r\n\r\n    translate(dx: number, dy: number): void {\r\n        const scale = this.wEye[2];\r\n        const X = vec3.create();\r\n        vec3.normalize(X, vec3.cross(X, this.wEyeDir, this.wUp));\r\n\r\n        // D = X * dx * scale + this.wUp * dy * scale;\r\n        const D = vec3.add(vec3.create(), vec3.scale(vec3.create(), X, dx * scale), vec3.scale(vec3.create(), this.wUp, dy * scale));\r\n        vec3.add(this.wEye, this.wEye, D);\r\n\r\n        // this.wLookAt = this.wEye + this.wEyeDir * this.wEyeLength;\r\n        vec3.scaleAndAdd(this.wLookAt, this.wEye, this.wEyeDir, this.wEyeLength);\r\n    }\r\n\r\n    yaw(delta: number): void {\r\n        vec3.rotateZ(this.wEyeDir, this.wEyeDir, vec3.fromValues(0, 0, 0), delta);\r\n        vec3.rotateZ(this.wUp, this.wUp, vec3.fromValues(0, 0, 0), delta);\r\n\r\n        // this.wLookAt = this.wEye + this.wEyeDir * this.wEyeLength;\r\n        vec3.scaleAndAdd(this.wLookAt, this.wEye, this.wEyeDir, this.wEyeLength);\r\n    }\r\n\r\n    pitch(delta: number): void {\r\n        delta = -delta;\r\n        // this.wEyeDir = this.wUp * sin(delta) + this.wEyeDir * cos(delta);\r\n        vec3.add(this.wEyeDir, vec3.scale(vec3.create(), this.wUp, Math.sin(delta)), vec3.scale(vec3.create(), this.wEyeDir, Math.cos(delta)));\r\n        vec3.normalize(this.wEyeDir, this.wEyeDir);\r\n\r\n        // this.wLookAt = this.wEye + this.wEyeDir * this.wEyeLength;\r\n        vec3.scaleAndAdd(this.wLookAt, this.wEye, this.wEyeDir, this.wEyeLength);\r\n\r\n        vec3.cross(this.wUp, vec3.cross(vec3.create(), this.wEyeDir, this.wUp), this.wEyeDir);\r\n        vec3.normalize(this.wUp, this.wUp);\r\n    }\r\n\r\n    update(): void {\r\n        // model matrix\r\n        this.mModelMatrix = mat4.fromScaling(mat4.create(), vec3.fromValues(1, 1, 1 / this.groundRes));\r\n        // view matrix\r\n        mat4.lookAt(this.mViewMatrix, this.wEye, this.wLookAt, this.wUp);\r\n        // TODO: get the aspect ratio from canvas?\r\n        mat4.perspective(this.mProjectionMatrix, this.fovy, 1, this.wNear, this.wFar);\r\n    }\r\n\r\n    screenCoordToWorldDir(x: number, y: number): vec3 {\r\n        const wRight = vec3.create();\r\n        vec3.normalize(wRight, vec3.cross(wRight, this.wEyeDir, this.wUp));\r\n\r\n        const upOffset = vec3.scale(vec3.create(), this.wUp, Math.tan(this.fovy / 2) * (y - 0.5) * 2);\r\n        const rightOffset = vec3.scale(vec3.create(), wRight, Math.tan(this.fovy / 2) * (x - 0.5) * 2);\r\n        const offset = vec3.add(vec3.create(), upOffset, rightOffset);\r\n        const dir = vec3.add(vec3.create(), this.wEyeDir, offset);\r\n        vec3.normalize(dir, dir);\r\n\r\n        return dir;\r\n    }\r\n\r\n    screenCoordToLatLng(x: number, y: number): number[] | null {\r\n        const dir = this.screenCoordToWorldDir(x, y);\r\n\r\n        const t = -this.wEye[2] / dir[2];\r\n        if (t > 0) {\r\n            const intersectPoint = vec3.scaleAndAdd(vec3.create(), this.wEye, dir, t);\r\n            const originCoord = GeoUtils.latLng2Coord(this.wOrigin[0], this.wOrigin[1]);\r\n            const latLng = GeoUtils.coord2LatLng(intersectPoint[0] + originCoord[0], intersectPoint[1] + originCoord[1]);\r\n\r\n            //console.log(latLng);\r\n            return latLng;\r\n        }\r\n        return null;\r\n    }\r\n}","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","/**\r\n * Layer types definition\r\n */\r\nexport class LayerTypes {\r\n    public static TRIANGLE_2D_LAYER = 'triangle';\r\n    public static TRIANGLE_3D_LAYER = 'triangle3D';\r\n    public static LINE_LAYER = 'line';\r\n    public static POINT_LAYER = 'point';\r\n}\r\n\r\n/**\r\n * Colormap types definition\r\n */\r\nexport class ColorMapTypes {\r\n    public static SEQUENTIAL_RED_MAP = 'sequential_red';\r\n    public static SEQUENTIAL_BLUE_MAP = 'sequential_blue';\r\n    public static DIVERGING_BLUE_RED_MAP = 'diverging_blue_red';\r\n    public static DIVERGING_GREEN_BROWN_MAP = 'diverging_green_brown';\r\n    public static QUALITATIVE_MAP = 'qualitative';\r\n}\r\n\r\n/**\r\n * Mapview interaction status\r\n */\r\nexport class MapViewStatus {\r\n    public static IDLE = 0;\r\n    public static DRAG = 1;\r\n}","import * as d3 from 'd3-scale-chromatic';\r\nimport { ColorMapTypes } from './constants';\r\n\r\nexport abstract class ColorMap {\r\n  protected static interpolator: (t: number) => string;\r\n\r\n  public static getColor(value: number, color: ColorMapTypes, reverse = false) : number[] {\r\n    if (reverse) {\r\n      value = 1 - value;\r\n    }\r\n\r\n    switch (color) {\r\n      case ColorMapTypes.SEQUENTIAL_RED_MAP:\r\n        ColorMap.interpolator = d3.interpolateReds;\r\n      break;\r\n\r\n      case ColorMapTypes.SEQUENTIAL_BLUE_MAP:\r\n        ColorMap.interpolator = d3.interpolateBlues;\r\n      break;\r\n\r\n      default:\r\n        ColorMap.interpolator = d3.interpolateReds;\r\n      break;\r\n    }\r\n\r\n    const numberPattern = /\\d+/g;\r\n    const rgbStr = ColorMap.interpolator(value).match(numberPattern);\r\n    if (rgbStr === null) {\r\n      return [0, 0, 0]\r\n    }\r\n\r\n    return rgbStr.map(el => +el / 255);\r\n  }\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export abstract class DataLoader {\r\n  /**\r\n   * Loads a json file\r\n   * @param {string} url json file url\r\n   * @returns {Promise<unknown>} The load json promise\r\n   */\r\n  static async getJsonData(url: string): Promise<unknown> {\r\n    // Return a new promise.\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  }\r\n\r\n  /**\r\n   * Loads a text file\r\n   * @param {string} url text file url\r\n   * @returns {Promise<string>} The load text promise\r\n   */\r\n  static async getTextData(url: string): Promise<string> {\r\n    // Return a new promise.\r\n    const response = await fetch(url);\r\n    const txt = await response.text();\r\n\r\n    return txt;\r\n  }\r\n}\r\n","import { Environment } from './environment';\r\nimport { DataLoader } from './data-loader';\r\n\r\nimport { IMapRefs, IMapData, ICameraData, IFeatureData, ILayerData } from './interfaces';\r\n\r\nexport abstract class DataApi {\r\n  /**\r\n   * Load all layers\r\n   * @param {string} index The layers index file\r\n   */\r\n  static async getMapData(index: string): Promise<IMapRefs | IMapData> {\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${index}`;\r\n    console.log(url);\r\n\r\n    const datasets = await DataLoader.getJsonData(url);\r\n    return <IMapRefs | IMapData> datasets;\r\n  }\r\n\r\n  /**\r\n   * Load the camera\r\n   * @param {string} camera The camera file\r\n   */\r\n  static async getCameraParameters(camera: string): Promise<ICameraData> {\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${camera}.json`;\r\n    console.log(url);\r\n\r\n    const params = <ICameraData> await DataLoader.getJsonData(url);\r\n    return params;\r\n  }\r\n\r\n  /**\r\n   * Gets the layer data\r\n   * @param {string} layerId the layer data\r\n   */\r\n  static async getLayer(layerId: string): Promise<ILayerData> {\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${layerId}.json`;\r\n    console.log(url);\r\n\r\n    const feature = <ILayerData> await DataLoader.getJsonData(url);\r\n    return feature;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the layer data\r\n   * @param {string} layerId the layer data\r\n   */\r\n  static async getLayerFeature(layerId: string): Promise<IFeatureData[]> {\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${layerId}.json`;\r\n    console.log(url);\r\n\r\n    const feature = <IFeatureData[]> await DataLoader.getJsonData(url);\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * Gets the layer function\r\n   * @param {string} layerId the layer data\r\n   */\r\n   static async getLayerFunction(layerId: string): Promise<IFeatureData[]> {\r\n    // TODO\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${layerId}.json`;\r\n    console.log(url);\r\n\r\n    const feature = <IFeatureData[]> await DataLoader.getJsonData(url);\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * Gets the layer function\r\n   * @param {string} layerId the layer data\r\n   */\r\n   static async getLayerHighlight(layerId: string): Promise<IFeatureData[]> {\r\n    // TODO\r\n    const url = `${Environment.backend}/${Environment.dataFolder}/${layerId}.json`;\r\n    console.log(url);\r\n\r\n    const feature = <IFeatureData[]> await DataLoader.getJsonData(url);\r\n    return feature;\r\n  }\r\n}\r\n","import { MapView } from './mapview';\r\n\r\nexport class KeyEvents {\r\n    // div to attach the events\r\n    private _map: MapView;\r\n\r\n    /**\r\n     * Key events constructor\r\n     * @param {MapView} map the map to bind the events\r\n     */\r\n    constructor(map: MapView) {\r\n        this._map = map;\r\n    }\r\n\r\n    bindEvents(): void {\r\n        // sets the key listeners\r\n        window.addEventListener('keydown', this.keyDown.bind(this), false);\r\n    }\r\n\r\n    /**\r\n    * Handles key down event\r\n    * @param {KeyboardEvent} event The fired event\r\n    */\r\n    keyDown(event: KeyboardEvent): void {\r\n        // key value\r\n        const key = +event.key;\r\n        const layers = this._map.layerManager.layers;\r\n\r\n        // number key\r\n        if (!isNaN(key) && key < layers.length) {\r\n            // makes in visible\r\n            const isVisible = layers[key].visible;\r\n            layers[key].visible = !isVisible;\r\n\r\n            // render\r\n            this._map.render();\r\n        }\r\n    }\r\n}\r\n","/// <reference types=\"@types/webgl2\" />\r\n\r\nimport { Camera } from './camera';\r\nimport { IFeatureData, IStyle } from './interfaces';\r\nimport { ColorMapTypes } from './constants';\r\n\r\nexport abstract class Layer {\r\n  // layer id\r\n  protected _layerId: string;\r\n  // style\r\n  protected _style: keyof IStyle;\r\n\r\n  // is visible\r\n  protected _visible: boolean;\r\n  // is selectable\r\n  protected _selectable: boolean;\r\n\r\n  // layer's shader\r\n  protected _shaderProgram: WebGLShader[] = [];\r\n  // layer's camera\r\n  protected _camera: Camera;\r\n\r\n  /**\r\n   * Layer constructor\r\n   * @param {string} id The Mapview layer Identifier\r\n   * @param {string} visible The initial visibility state\r\n   * @param {string} selectable The initial selectability state\r\n   */\r\n  constructor(id: string, style: keyof IStyle, visible = true, selectable = false) {\r\n    this._layerId = id;\r\n    this._style = style;\r\n\r\n    this._visible = visible;\r\n    this._selectable = selectable;\r\n  }\r\n\r\n  /**\r\n   * Accessor for the layer id\r\n   */\r\n  get layerId(): string {\r\n    return this._layerId;\r\n  }\r\n\r\n  /**\r\n   * Accessor for the layer style\r\n   */\r\n  get style(): keyof IStyle {\r\n    return this._style;\r\n  }\r\n\r\n  /**\r\n   * Returns if the layers is visible\r\n   */\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  /**\r\n   * Sets the visibility\r\n   */\r\n  set visible(visible: boolean) {\r\n    this._visible = visible;\r\n  }\r\n\r\n  /**\r\n   * Returns if the layers is selectable\r\n   */\r\n  get selectable(): boolean {\r\n    return this._selectable;\r\n  }\r\n\r\n  /**\r\n   * Sets the selection\r\n   */\r\n  set selectable(selectable: boolean) {\r\n    this._selectable = selectable;\r\n  }\r\n\r\n  /**\r\n   * Sends the camera to the layer\r\n   */\r\n  set camera(camera: Camera) {\r\n    this._camera = camera;\r\n  }\r\n\r\n  /**\r\n   * Shader load signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   */\r\n  abstract loadShaders(glContext: WebGL2RenderingContext): Promise<void>;\r\n\r\n  /**\r\n   * Data update signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   * @param {IFeatureData[]} data layer data\r\n   */\r\n  abstract updateFeatures(glContext: WebGL2RenderingContext, data: IFeatureData[] | undefined): void;\r\n\r\n  /**\r\n   * Function update signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   * @param {IFeatureData[]} data layer data\r\n   * @param {ColorMapTypes} cmap used color map\r\n   */\r\n  abstract updateFunction(glContext: WebGL2RenderingContext, data: IFeatureData[], cmap?: ColorMapTypes): void;\r\n\r\n  /**\r\n   * Layer style update signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   */\r\n  abstract updateStyle(glContext: WebGL2RenderingContext): void;\r\n\r\n  /**\r\n   * \r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   * @param {IFeatureData[]} data layer data\r\n   */\r\n  abstract highlight(glContext: WebGL2RenderingContext, ids: number[]): void;\r\n\r\n  /**\r\n   * Layer render function signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   */\r\n  abstract render(glContext: WebGL2RenderingContext): void;\r\n\r\n  /**\r\n   * Layer picking function signature\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   * @param {number} x Mouse x coordinate\r\n   * @param {number} y Mouse y coordinate\r\n   */\r\n  abstract pick(glContext: WebGL2RenderingContext,  x: number, y: number): void;\r\n\r\n  /**\r\n   * Inits the layer's shader program\r\n   * @param {string} vsSource Vertex shader source\r\n   * @param {string} fsSource Fragment shader source\r\n   * @param {WebGL2RenderingContext} glContext WebGL context\r\n   */\r\n  protected initShaderProgram(vsSource: string, fsSource: string, glContext: WebGL2RenderingContext): void {\r\n    // load the shaders\r\n    const vertexShader = this.buildShader(glContext.VERTEX_SHADER, vsSource, glContext);\r\n    const fragmentShader = this.buildShader(glContext.FRAGMENT_SHADER, fsSource, glContext);\r\n\r\n    // Create the shader program\r\n    const shader = glContext.createProgram();\r\n    // There was a problem loading the shaders\r\n    if (!shader || !vertexShader || !fragmentShader) { return; }\r\n\r\n    glContext.attachShader(shader, vertexShader);\r\n    glContext.attachShader(shader, fragmentShader);\r\n    glContext.linkProgram(shader);\r\n\r\n    // If creating the shader program failed, alert\r\n    if (!glContext.getProgramParameter(shader, glContext.LINK_STATUS)) {\r\n      throw new Error('Unable to initialize the shader program: ' + glContext.getProgramInfoLog(shader));\r\n    }\r\n\r\n    // stores the shader\r\n    this._shaderProgram.push(shader);\r\n  }\r\n\r\n  /**\r\n   * Builds the layer shader\r\n   * @param {number} type The shader type\r\n   * @param {string} source The shader source string\r\n   * @param {WebGL2RenderingContext} glContext The WebGL context\r\n   * @returns {WebGLShader} The shader object\r\n   */\r\n  protected buildShader(type: number, source: string, glContext: WebGL2RenderingContext): WebGLShader | null {\r\n    // creates the shader\r\n    const shader = glContext.createShader(type);\r\n    if (!shader) { return null; }\r\n\r\n    // Send the source to the shader object\r\n    glContext.shaderSource(shader, source);\r\n    // Compile the shader program\r\n    glContext.compileShader(shader);\r\n\r\n    // See if it compiled successfully\r\n    if (!glContext.getShaderParameter(shader, glContext.COMPILE_STATUS)) {\r\n      console.error('An error occurred compiling the shaders: ');\r\n      console.error(source);\r\n      console.error(glContext.getShaderInfoLog(shader));\r\n\r\n      glContext.deleteShader(shader);\r\n      throw new Error('Unable to load the shader');\r\n    }\r\n\r\n    return shader;\r\n  }\r\n}\r\n","import { IStyle } from './interfaces';\r\n\r\n// @ts-ignore \r\nimport light from './styles/light.json';\r\n// @ts-ignore\r\nimport dark from './styles/dark.json'; \r\n\r\nexport class MapStyle {\r\n    // default color map\r\n    protected static default: IStyle = {\r\n        land: '#EEEEEE',\r\n        roads: '#FFFFFF',\r\n        parks: '#C3D0B2',\r\n        water: '#B9CDD2',\r\n        sky:   '#BED2D7'\r\n    };\r\n\r\n    // custom style\r\n    protected static custom: IStyle;\r\n    // default color for unknown layers\r\n    protected static notFound = \"#FFFFFF\";\r\n\r\n    /**\r\n     * Get the feature color\r\n     * @param {string} type Feature type\r\n     */\r\n    public static getColor(type: keyof IStyle): number[] {\r\n        // uses the default style if available\r\n        const style = MapStyle.custom || MapStyle.default;\r\n        const hex = style[type] || MapStyle.notFound; \r\n\r\n        const str = hex.slice(1, 7);\r\n        const rgb = [0, 2, 4].map((start) => {\r\n            return parseInt(str.slice(start, start + 2), 16) / 255;\r\n        });\r\n\r\n        return rgb;\r\n    }\r\n\r\n    /**\r\n     * Set the feature color\r\n     * @param {any} style new map style in id: #rrggbb format\r\n     */\r\n    public static setColor(name: string, style?: IStyle): void {\r\n        let styleObj = MapStyle.default;\r\n\r\n        if (name === 'light') {\r\n            styleObj = light;\r\n        }\r\n        else if (name === 'dark') {\r\n            styleObj = dark;\r\n        }\r\n        else if (style) {\r\n            styleObj = style;\r\n        }\r\n\r\n        MapStyle.custom = styleObj;\r\n    }\r\n\r\n    public static getHighlightColor() {\r\n        return [1.0, 0.8, 0];\r\n    }\r\n}\r\n","#version 300 es\r\n\r\nconst float pi = 3.1415926535897932384626433832795;\r\nconst float pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\nconst float pi_4   = 12.56637061435917295385057353311801153678867759750042328389;\r\n\r\nconst highp float res = 256.0;\r\nconst highp float wLevel = 22.0; \r\n\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nuniform vec2 uWorldOrigin;\r\n\r\nin highp vec2 vertPos;\r\nin vec3 vertColor;\r\n\r\nout highp vec3 vColor;\r\n\r\nvec2 latLngToPixel(highp float latitude, highp float longitude){\r\n  highp float sinLatitude = sin(latitude * pi_180);\r\n  highp float pixelY = 256.0-((0.5 - log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n  highp float pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n\r\n  return vec2(pixelX,pixelY);\r\n}\r\n\r\nvoid main() {\r\n  vec2 movedPos = latLngToPixel(vertPos.x, vertPos.y) - latLngToPixel(uWorldOrigin.x, uWorldOrigin.y);\r\n  gl_Position =  uProjectionMatrix * uModelViewMatrix * vec4(movedPos, 0.0, 1.0);\r\n  // function value\r\n  vColor = vertColor;\r\n} ","#version 300 es\r\n\r\nin highp vec3 vColor;\r\nout highp vec4 fragColor;\r\n\r\nvoid main() {  \r\n  fragColor = vec4(vColor, 1.0);\r\n}","/// <reference types=\"@types/webgl2\" />\r\n\r\nimport { Layer } from './layer';\r\nimport { DataApi } from './data-api';\r\nimport { MapStyle } from './map-style';\r\nimport { ColorMap } from './colormap';\r\nimport { ColorMapTypes } from './constants';\r\nimport { ILayerData, IFeatureData } from './interfaces';\r\n\r\n// @ts-ignore \r\nimport vsShader from './shaders/line.vs';\r\n// @ts-ignore\r\nimport fsShader from './shaders/line.fs';\r\n\r\nexport class LineLayer extends Layer {\r\n    // number of coordinates per vertex\r\n    protected static COORDS = 2;\r\n    // number of shaders\r\n    protected static N_SHADER = 1;\r\n    // line width\r\n    protected static LINE_WIDTH = 2;\r\n\r\n    // OpenGL data buffer\r\n    protected _glPositionBuffer: WebGLBuffer | null = null;\r\n    protected _glColorBuffer: WebGLTexture | null = null;\r\n\r\n    // data buffer\r\n    protected _positionBuffer: number[] = [];\r\n    protected _colorBuffer: number[] = [];\r\n\r\n    // shader attribute id\r\n    protected _positionId = -1;\r\n    protected _colorId = -1;\r\n\r\n    // transformation uniforms\r\n    protected _uModelViewMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uProjectionMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uWorldOriginId: WebGLUniformLocation | null = null;\r\n\r\n    /**\r\n     * The Line Layer constructor\r\n     * @param {ILayerData} id the layer id\r\n     */\r\n    constructor(info: ILayerData) {\r\n        super(\r\n            info.id,\r\n            info.style,\r\n            info.visible !== undefined ? info.visible : true,\r\n            info.selectable !== undefined ? info.selectable : false\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Shader load signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    async loadShaders(glContext: WebGL2RenderingContext): Promise<void> {\r\n        // load all shaders\r\n        this.initShaderProgram(vsShader, fsShader, glContext);\r\n\r\n        // vertex data on the shader\r\n        this._positionId = glContext.getAttribLocation(this._shaderProgram[0], 'vertPos');\r\n        this._colorId = glContext.getAttribLocation(this._shaderProgram[0], 'vertColor');\r\n\r\n        // transformation uniforms on the shader\r\n        this._uModelViewMatrixId = glContext.getUniformLocation(this._shaderProgram[0], 'uModelViewMatrix');\r\n        this._uProjectionMatrixId = glContext.getUniformLocation(this._shaderProgram[0], 'uProjectionMatrix');\r\n        this._uWorldOriginId = glContext.getUniformLocation(this._shaderProgram[0], 'uWorldOrigin');\r\n\r\n        // load message\r\n        console.log(`Shaders successfully loaded for layer ${this._layerId}.`);\r\n    }\r\n\r\n    /**\r\n     * Data update signature\r\n     * @returns {Promise<any>} The load data promise\r\n     */\r\n    async updateFeatures(glContext: WebGL2RenderingContext, data: IFeatureData[] | undefined = undefined): Promise<void> {\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFeature(this._layerId) : data;\r\n\r\n        // formats the buffer\r\n        this._positionBuffer = [];\r\n        // formats the buffer\r\n        this._colorBuffer = [];\r\n\r\n        // iterate over geometry\r\n        for (const feature of feats) {\r\n            // no geometry\r\n            if (feature['geometry'] === undefined) {\r\n                continue;\r\n            }\r\n\r\n            // gets the feature color\r\n            const rgb = MapStyle.getColor(this.style);\r\n\r\n            // get the coordinates\r\n            this._positionBuffer.push(...feature.geometry.coordinates);\r\n            const posSize = feature.geometry.coordinates.length;\r\n\r\n            // get the colors\r\n            for (let id = 0; id < posSize / LineLayer.COORDS; id++) {\r\n                this._colorBuffer.push(...rgb);\r\n            }\r\n        }\r\n\r\n        // creates the buffer\r\n        this.createBuffers(glContext);\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Function update signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     * @param {IFeatureData[]} data layer function\r\n     * @param {ColorMapTypes} cmap used color map\r\n     */\r\n    async updateFunction(glContext: WebGL2RenderingContext, data: IFeatureData[], cmap: ColorMapTypes = ColorMapTypes.SEQUENTIAL_RED_MAP): Promise<void> {\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFunction(this._layerId) : data;\r\n\r\n        // new feature found\r\n        this._colorBuffer = [];\r\n\r\n        // fill the function array\r\n        for (const feature of feats) {\r\n            if (feature['scalar'] === undefined) {\r\n                continue;\r\n            }\r\n            // get the function values\r\n            const scalar = feature.scalar;\r\n\r\n            // min and max values\r\n            const min = Math.min(...scalar);\r\n            const max = Math.max(...scalar);\r\n\r\n            // normalize colors\r\n            scalar.map((val) => {\r\n                const nrm = (val - min) / (max - min);\r\n                const rgb = ColorMap.getColor(nrm, cmap);\r\n                this._colorBuffer.push(...rgb);\r\n            });\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Style update implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    updateStyle(glContext: WebGL2RenderingContext): void {\r\n        // gets the new color\r\n        const rgb = MapStyle.getColor(this.style);\r\n        //\r\n        const size = this._colorBuffer.length / 3;\r\n        this._colorBuffer = [];\r\n\r\n        for (let id = 0; id < size; id++) {\r\n            this._colorBuffer.push(...rgb);\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    highlight(glContext: WebGL2RenderingContext, data: number[]): void {\r\n        \r\n    }\r\n\r\n    /**\r\n     * Layer render function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    render(glContext: WebGL2RenderingContext): void {\r\n        // invalid layers\r\n        if (\r\n            this._shaderProgram.length === 0 ||\r\n            this._shaderProgram[0] === null ||\r\n            this._glPositionBuffer === null ||\r\n            this._glColorBuffer === null ||\r\n            this._positionId < 0 ||\r\n            this._colorId < 0\r\n        ) {\r\n            return;\r\n        }\r\n        // enables the depth test\r\n        glContext.enable(glContext.DEPTH_TEST);\r\n        glContext.depthFunc(glContext.LEQUAL);\r\n\r\n        // sends the uniforms\r\n        this.setUniforms(glContext);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        glContext.vertexAttribPointer(this._positionId, LineLayer.COORDS, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._positionId);\r\n\r\n        // binds the scalar buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        glContext.vertexAttribPointer(this._colorId, 3, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._colorId);\r\n\r\n        // binds the shader program\r\n        glContext.useProgram(this._shaderProgram[0]);\r\n        glContext.lineWidth(LineLayer.LINE_WIDTH);\r\n\r\n        // draw the geometry\r\n        glContext.drawArrays(glContext.LINES, 0, this._positionBuffer.length / LineLayer.COORDS);\r\n\r\n        // disables the depth buffer\r\n        glContext.disable(glContext.DEPTH_TEST);\r\n    }\r\n\r\n    /**\r\n     * Layer picking function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     * @param {number} x Mouse x coordinate\r\n     * @param {number} y Mouse y coordinate\r\n     */\r\n    pick(glContext: WebGL2RenderingContext, x: number, y: number): void { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        // TODO.\r\n    }\r\n\r\n    /**\r\n     * Send uniforms to the shader\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected setUniforms(glContext: WebGL2RenderingContext): void {\r\n        if (!this._shaderProgram.length || this._shaderProgram[0] === null) {\r\n            return;\r\n        }\r\n        glContext.useProgram(this._shaderProgram[0]);\r\n        // send matrices\r\n        glContext.uniformMatrix4fv(this._uModelViewMatrixId, false, this._camera.getModelViewMatrix());\r\n        glContext.uniformMatrix4fv(this._uProjectionMatrixId, false, this._camera.getProjectionMatrix());\r\n        // send world origin\r\n        const worldOrigin = this._camera.getWorldOrigin();\r\n        glContext.uniform2f(this._uWorldOriginId, worldOrigin[0], worldOrigin[1]);\r\n    }\r\n\r\n    /**\r\n     * Layer VBO creation signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createBuffers(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the positions.\r\n        this._glPositionBuffer = glContext.createBuffer();\r\n        // Select the positionBuffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._positionBuffer), glContext.STATIC_DRAW\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Scalar data vbo creation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createColorBuffer(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the colors.\r\n        this._glColorBuffer = glContext.createBuffer();\r\n        // Select the color buffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._colorBuffer), glContext.STATIC_DRAW\r\n        );\r\n    }\r\n}\r\n","#version 300 es\r\n\r\nconst float PI = 3.1415926535897932384626433832795;\r\nconst float pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\nconst float pi_4   = 12.56637061435917295385057353311801153678867759750042328389;\r\n\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nuniform vec2 uWorldOrigin;\r\n\r\nin vec2 vertPos;\r\nin float vertScalar;\r\n\r\nout highp float vScalar;\r\n\r\nvec2 latLngToPixel(float latitude, float longitude){\r\n  float sinLatitude = sin(latitude * pi_180);\r\n  float pixelY = 256.0-((0.5 - log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n  float pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n\r\n  return vec2(pixelX,pixelY);\r\n}\r\n\r\nvoid main() {\r\n  vec2 movedPos = latLngToPixel(vertPos.x, vertPos.y) - latLngToPixel(uWorldOrigin.x, uWorldOrigin.y);\r\n  gl_Position =  uProjectionMatrix * uModelViewMatrix * vec4(movedPos, 0.0, 1.0);\r\n  // function value\r\n  vScalar = vertScalar;\r\n  // point size\r\n  gl_PointSize = 8.0;\r\n} ","#version 300 es\r\n\r\nin highp float vScalar;\r\nout highp vec4 fragColor;\r\n\r\nuniform sampler2D uColorMap;\r\n\r\nvoid main() {\r\n  mediump float dist  = length(gl_PointCoord.xy - vec2(.5, .5));\r\n  dist = dist > 0.5 ? 0.0 : 1.0;\r\n  \r\n  fragColor = vec4(texture(uColorMap, vec2(vScalar, 0.5)).rgb, dist);\r\n}","/// <reference types=\"@types/webgl2\" />\r\n\r\nimport { Layer } from './layer';\r\nimport { DataApi } from './data-api';\r\nimport { ColorMapTypes } from './constants';\r\nimport { ColorMap } from './colormap';\r\nimport { IFeatureData, ILayerData } from './interfaces';\r\n\r\n// @ts-ignore\r\nimport vsShader from './shaders/point.vs';\r\n// @ts-ignore\r\nimport fsShader from './shaders/point.fs';\r\nimport { MapStyle } from './map-style';\r\n\r\n\r\nexport class PointLayer extends Layer {\r\n    // number of coordinates per vertex\r\n    protected _COORDS = 2;\r\n\r\n    // OpenGL data buffer\r\n    protected _glPositionBuffer: WebGLBuffer | null = null;\r\n    protected _glColorBuffer: WebGLBuffer | null = null;\r\n\r\n    // data buffer\r\n    protected _positionBuffer: number[] = [];\r\n    protected _colorBuffer: number[] = [];\r\n\r\n    // shader attribute id\r\n    protected _positionId = -1;\r\n    protected _colorId = -1;\r\n\r\n    // uniforms\r\n    protected _uModelViewMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uProjectionMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uWorldOriginId: WebGLUniformLocation | null = null;\r\n    protected _uColorMapId: WebGLUniformLocation | null = null;\r\n\r\n    /**\r\n     * The Vector Layer constructor\r\n     * @param {string} id the layer id\r\n     */\r\n    constructor(info: ILayerData) {\r\n        super(\r\n            info.id,\r\n            info.style,\r\n            info.visible !== undefined ? info.visible : true,\r\n            info.selectable !== undefined ? info.selectable : false\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Shader load signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    async loadShaders(glContext: WebGL2RenderingContext): Promise<void>  {\r\n\r\n        // load all shaders\r\n        this.initShaderProgram(vsShader, fsShader, glContext);\r\n\r\n        // uniforms definition\r\n        this._positionId = glContext.getAttribLocation(this._shaderProgram[0], 'vertPos');\r\n        this._colorId = glContext.getAttribLocation(this._shaderProgram[0], 'vertScalar');\r\n\r\n        this._uModelViewMatrixId = glContext.getUniformLocation(this._shaderProgram[0], 'uModelViewMatrix');\r\n        this._uProjectionMatrixId = glContext.getUniformLocation(this._shaderProgram[0], 'uProjectionMatrix');\r\n        this._uWorldOriginId = glContext.getUniformLocation(this._shaderProgram[0], 'uWorldOrigin');\r\n\r\n        // colorMap texture\r\n        this._uColorMapId = glContext.getUniformLocation(this._shaderProgram[0], 'uColorMap');\r\n        // load message\r\n        console.log(`Shaders successfully loaded for layer ${this._layerId}.`);\r\n    }\r\n\r\n    /**\r\n     * Data update signature\r\n     * @returns {Promise<any>} The load data promise\r\n     */\r\n    async updateFeatures(glContext: WebGL2RenderingContext, data: IFeatureData[] | undefined = undefined): Promise<void> {\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFeature(this._layerId) : data;\r\n\r\n        // formats the buffer\r\n        this._positionBuffer = [];\r\n        // formats the buffer\r\n        this._colorBuffer = [];\r\n\r\n        // iterates over the geometries\r\n        for (const feature of feats) {\r\n            // no geometry\r\n            if (feature['geometry'] === undefined) {\r\n                continue;\r\n            }\r\n\r\n            // gets the feature color\r\n            const rgb = MapStyle.getColor(this.style);\r\n\r\n            // get the coordinates\r\n            this._positionBuffer.push(...feature.geometry.coordinates);\r\n            const posSize = feature.geometry.coordinates.length;\r\n\r\n            // get the colors\r\n            for (let id = 0; id < posSize / this._COORDS; id++) {\r\n                this._colorBuffer.push(...rgb);\r\n            }\r\n        }\r\n\r\n        // creates the buffer\r\n        this.createBuffers(glContext);\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    async updateFunction(glContext: WebGL2RenderingContext, data: IFeatureData[], cmap: ColorMapTypes = ColorMapTypes.SEQUENTIAL_RED_MAP): Promise<void> { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFunction(this._layerId) : data;\r\n\r\n        // new feature found\r\n        this._colorBuffer = [];\r\n\r\n        // fill the function array\r\n        for (const feature of feats) {\r\n            if (feature['scalar'] === undefined) {\r\n                continue;\r\n            }\r\n            // get the function values\r\n            const scalar = feature.scalar;\r\n\r\n            // min and max values\r\n            const min = Math.min(...scalar);\r\n            const max = Math.max(...scalar);\r\n\r\n            // normalize colors\r\n            scalar.map((val) => {\r\n                const nrm = (val - min) / (max - min);\r\n                const rgb = ColorMap.getColor(nrm, cmap);\r\n                this._colorBuffer.push(...rgb);\r\n            });\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Style update implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    updateStyle(glContext: WebGL2RenderingContext): void {\r\n        // gets the new color\r\n        const rgb = MapStyle.getColor(this.style);\r\n        //\r\n        const size = this._colorBuffer.length / 3;\r\n        this._colorBuffer = [];\r\n\r\n        for (let id = 0; id < size; id++) {\r\n            this._colorBuffer.push(...rgb);\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    highlight(glContext: WebGL2RenderingContext, data: number[]): void {\r\n        \r\n    }\r\n\r\n    /**\r\n     * Layer render function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    render(glContext: WebGL2RenderingContext): void {\r\n        // invalid layers\r\n        if (\r\n            this._shaderProgram.length === 0 ||\r\n            this._shaderProgram[0] === null ||\r\n            this._glPositionBuffer === null ||\r\n            this._glColorBuffer === null ||\r\n            this._positionId < 0 ||\r\n            this._colorId < 0\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // sends the uniforms\r\n        this.setUniforms(glContext);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        glContext.vertexAttribPointer(this._positionId, this._COORDS, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._positionId);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        glContext.vertexAttribPointer(this._colorId, 1, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._colorId);\r\n\r\n        // binds the shader program\r\n        glContext.useProgram(this._shaderProgram[0]);\r\n\r\n        // draw the geometry\r\n        glContext.drawArrays(glContext.POINTS, 0, this._positionBuffer.length / this._COORDS);\r\n    }\r\n\r\n    /**\r\n     * Layer picking function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     * @param {number} x Mouse x coordinate\r\n     * @param {number} y Mouse y coordinate\r\n     */\r\n    pick(glContext: WebGL2RenderingContext, x: number, y: number): void { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        // TODO.\r\n    }\r\n\r\n    /**\r\n     * Send uniforms to the shader\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected setUniforms(glContext: WebGL2RenderingContext): void {\r\n        if (!this._shaderProgram.length || this._shaderProgram[0] === null) {\r\n            return;\r\n        }\r\n        glContext.useProgram(this._shaderProgram[0]);\r\n        // send matrices\r\n        glContext.uniformMatrix4fv(this._uModelViewMatrixId, false, this._camera.getModelViewMatrix());\r\n        glContext.uniformMatrix4fv(this._uProjectionMatrixId, false, this._camera.getProjectionMatrix());\r\n        // send world origin\r\n        const worldOrigin = this._camera.getWorldOrigin();\r\n        glContext.uniform2f(this._uWorldOriginId, worldOrigin[0], worldOrigin[1]);\r\n    }\r\n\r\n    /**\r\n     * Layer VBO creation signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createBuffers(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the positions.\r\n        this._glPositionBuffer = glContext.createBuffer();\r\n        // Select the positionBuffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._positionBuffer), glContext.STATIC_DRAW\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Scalar data vbo creation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createColorBuffer(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the colors.\r\n        this._glColorBuffer = glContext.createBuffer();\r\n        // Select the color buffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._colorBuffer), glContext.STATIC_DRAW\r\n        );\r\n    }\r\n}\r\n","#version 300 es\r\n\r\nconst highp float pi = 3.1415926535897932384626433832795;\r\nconst highp float pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\nconst highp float pi_4   = 12.56637061435917295385057353311801153678867759750042328389;\r\n\r\nuniform highp mat4 uModelViewMatrix;\r\nuniform highp mat4 uProjectionMatrix;\r\nuniform highp vec2 uWorldOrigin;\r\n\r\nin highp vec2 vertPos;\r\nin highp vec3 vertRgb;\r\n\r\nout highp vec3 vRgb;\r\n    \r\nvec2 latLngToPixel(highp float latitude, highp float longitude){\r\n  highp float sinLatitude = sin(latitude * pi_180);\r\n  highp float pixelY = 256.0-((0.5 - log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n  highp float pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n\r\n  return vec2(pixelX,pixelY);\r\n}\r\n\r\nvoid main() {\r\n  highp vec2 movedPos = latLngToPixel(vertPos.x, vertPos.y) - latLngToPixel(uWorldOrigin.x, uWorldOrigin.y);\r\n  highp vec4 viewPos = uModelViewMatrix * vec4(movedPos, 0.0, 1.0);\r\n\r\n  vRgb = vertRgb;\r\n\r\n  gl_Position =  uProjectionMatrix * vec4(viewPos.xyz, 1.0);\r\n} ","#version 300 es\r\n\r\nin highp vec3 vRgb;\r\nout highp vec4 fragRgb;\r\n\r\nvoid main() {\r\n  fragRgb = vec4(vRgb, 1.0);\r\n}","#version 300 es\r\n\r\nconst float pi = 3.1415926535897932384626433832795;\r\nconst float pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\nconst float pi_4   = 12.56637061435917295385057353311801153678867759750042328389;\r\n\r\nuniform highp mat4 uModelViewMatrix;\r\nuniform highp mat4 uProjectionMatrix;\r\nuniform highp vec2 uWorldOrigin;\r\n\r\nin highp vec3 vertPos;\r\nin highp vec3 vertRgb;\r\nin highp vec3 vertNrm;\r\n\r\nout highp vec3 vNrm;\r\nout highp vec3 vRgb;\r\n    \r\nvec2 latLngToPixel(highp float latitude, highp float longitude){\r\n  highp float sinLatitude = sin(latitude * pi_180);\r\n  highp float pixelY = 256.0-((0.5 - log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n  highp float pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n\r\n  return vec2(pixelX,pixelY);\r\n}\r\n\r\nvoid main() {\r\n  // position\r\n  highp vec2 movedLatLng = latLngToPixel(vertPos.x, vertPos.y) - latLngToPixel(uWorldOrigin.x, uWorldOrigin.y);  \r\n  highp vec3 movedPos = vec3(movedLatLng, vertPos.z);\r\n\r\n  gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(movedPos, 1.0);\r\n\r\n  // normal\r\n  // highp mat3 normalMatrix = transpose(inverse(mat3(uModelViewMatrix)));\r\n  // vNrm = normalMatrix * normalize(vertNrm);\r\n\r\n  vNrm = normalize(vertNrm);\r\n\r\n  // color\r\n  vRgb = vertRgb;\r\n}","#version 300 es\r\n\r\nuniform highp mat4 uModelViewMatrix;\r\n\r\nin highp vec3 vNrm;\r\nin highp vec3 vRgb;\r\n\r\nout highp vec4 fragRgb;\r\n\r\nvoid main() {\r\n//   highp mat4 normalMatrix = transpose(inverse(uModelViewMatrix));\r\n//   highp vec3 uLightDirection = normalize(mat3(normalMatrix) * vec3(0,0,1));\r\n  highp vec3 uLightDirection = normalize(vec3(0,-1,1));\r\n\r\n  highp vec3 normal = normalize(vNrm);\r\n  highp float light = max(dot(normal, uLightDirection) * 0.6 + 0.3, 0.0);\r\n\r\n  if (length(normal) < 10e-5) {\r\n    fragRgb = vec4(vec3(1.0, 0.0, 0.0) * light, 1.0);\r\n  }\r\n  else {\r\n    fragRgb = vec4(vRgb * light, 1.0);\r\n  }\r\n}","#version 300 es\r\n\r\nconst float pi = 3.1415926535897932384626433832795;\r\nconst float pi_180 = 0.017453292519943295769236907684886127134428718885417254560;\r\nconst float pi_4   = 12.56637061435917295385057353311801153678867759750042328389;\r\n\r\nuniform highp mat4 uModelViewMatrix;\r\nuniform highp mat4 uProjectionMatrix;\r\nuniform highp vec2 uWorldOrigin;\r\n\r\nin highp vec3 vertPos;\r\n    \r\nvec2 latLngToPixel(highp float latitude, highp float longitude){\r\n  highp float sinLatitude = sin(latitude * pi_180);\r\n  highp float pixelY = 256.0-((0.5 - log((1.0 + sinLatitude) / (1.0 - sinLatitude)) / (pi_4)) * 256.0);\r\n  highp float pixelX = ((longitude + 180.0) / 360.0) * 256.0;\r\n\r\n  return vec2(pixelX,pixelY);\r\n}\r\n\r\nvoid main() {\r\n  // position\r\n  highp vec2 movedLatLng = latLngToPixel(vertPos.x, vertPos.y) - latLngToPixel(uWorldOrigin.x, uWorldOrigin.y);  \r\n  highp vec3 movedPos = vec3(movedLatLng, vertPos.z);\r\n\r\n  gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(movedPos, 1.0);\r\n}","#version 300 es\r\n\r\nout highp vec4 fragRgb;\r\n\r\nvoid main() {\r\n    fragRgb = vec4(0.55, 0.45, 0.45, 1.0);\r\n}","/// <reference types=\"@types/webgl2\" />\r\n\r\nimport { Layer } from './layer';\r\nimport { DataApi } from './data-api';\r\nimport { MapStyle } from './map-style';\r\nimport { ColorMap } from './colormap';\r\nimport { ColorMapTypes, LayerTypes } from './constants';\r\nimport { ILayerData, IFeatureData } from './interfaces';\r\n\r\n// @ts-ignore\r\nimport vsTriangle2D from './shaders/triangle2D.vs';\r\n// @ts-ignore\r\nimport fsTriangle2D from './shaders/triangle2D.fs';\r\n\r\n// @ts-ignore\r\nimport vsTriangle3D from './shaders/triangle3D.vs';\r\n// @ts-ignore\r\nimport fsTriangle3D from './shaders/triangle3D.fs';\r\n\r\n// @ts-ignore\r\nimport vsLine3D from './shaders/line3D.vs';\r\n// @ts-ignore\r\nimport fsLine3D from './shaders/line3D.fs';\r\n\r\n\r\nexport class TriangleLayer extends Layer {\r\n    // number of coordinates per vertex\r\n    protected _COORDS = 2;\r\n    // layer type\r\n    protected _type = LayerTypes.TRIANGLE_2D_LAYER;\r\n    protected _renderStyle = 'smooth';\r\n    protected _renderNormal = false;\r\n    // layer height\r\n    protected _height = 0;\r\n\r\n    // OpenGL data buffer\r\n    protected _glPositionBuffer: WebGLBuffer | null = null;\r\n    protected _glIndexBuffer: WebGLBuffer | null = null;\r\n    protected _glIndexBufferWire: WebGLBuffer | null = null;\r\n    protected _glColorBuffer: WebGLBuffer | null = null;\r\n    protected _glNormalBuffer: WebGLBuffer | null = null;\r\n    protected _glNormalRenderBuffer: WebGLBuffer | null = null;\r\n\r\n    // data buffer\r\n    protected _positionBuffer: number[] = [];\r\n    protected _indexBuffer: number[] = [];\r\n    protected _indexBufferWire: number[] = [];\r\n    protected _colorBuffer: number[] = [];\r\n    protected _normalBuffer: number[] = [];\r\n    protected _normalRenderBuffer: number[] = [];\r\n\r\n    // shader attribute id\r\n    protected _positionId = -1;\r\n    protected _colorId = -1;\r\n    protected _normalId = -1;\r\n\r\n    // uniforms\r\n    protected _uModelViewMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uProjectionMatrixId: WebGLUniformLocation | null = null;\r\n    protected _uWorldOrigin: WebGLUniformLocation | null = null;\r\n\r\n    /**\r\n     * The Triangle Layer constructor\r\n     * @param {ILayerData} info the layer data\r\n     */\r\n    constructor(info: ILayerData) {\r\n        super(\r\n            info.id,\r\n            info.style,\r\n            info.visible !== undefined ? info.visible : true,\r\n            info.selectable !== undefined ? info.selectable : false\r\n        );\r\n\r\n        // stores the type\r\n        this._type = info.type;\r\n        // render style\r\n        if (info.renderStyle) {\r\n            this._renderStyle = info.renderStyle.split('+')[0];\r\n            this._renderNormal = info.renderStyle.includes('normals');\r\n\r\n            if (info.height) {\r\n                this._height = info.height;\r\n            }\r\n        }\r\n        // sets the layer dimension\r\n        if (this._type === LayerTypes.TRIANGLE_3D_LAYER) {\r\n            this._COORDS = 3;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shader load implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    async loadShaders(glContext: WebGL2RenderingContext): Promise<void> {\r\n\r\n        // loads the proprer shader\r\n        if (this._type === LayerTypes.TRIANGLE_3D_LAYER) {\r\n            this.initShaderProgram(vsTriangle3D, fsTriangle3D, glContext);\r\n        }\r\n        else {\r\n            this.initShaderProgram(vsTriangle2D, fsTriangle2D, glContext);\r\n        }\r\n\r\n        // loads the line shader to render the normals\r\n        if (this._renderNormal === true) {\r\n            this.initShaderProgram(vsLine3D, fsLine3D, glContext);\r\n        }\r\n\r\n        // load message\r\n        console.log(`Shaders successfully loaded for layer ${this._layerId}. Number of dimensions: ${this._COORDS}`);\r\n    }\r\n\r\n    /**\r\n     * Data update implementation\r\n     * @returns {Promise<void>} The load data promise\r\n     */\r\n    async updateFeatures(glContext: WebGL2RenderingContext, data: IFeatureData[] | undefined = undefined): Promise<void> {\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFeature(this._layerId) : data;\r\n\r\n        // loaded number of vertices\r\n        let nverts = 0;\r\n\r\n        // formats the buffer\r\n        this._positionBuffer = [];\r\n        // formats the buffer\r\n        this._indexBuffer = [];\r\n        this._indexBufferWire = [];\r\n\r\n        // formats the buffer\r\n        this._colorBuffer = [];\r\n        // formats the buffer\r\n        this._normalBuffer = [];\r\n\r\n        // gets the feature color\r\n        const rgb = MapStyle.getColor(this.style);\r\n\r\n        // iterates over the geometries\r\n        for (const feature of feats) {\r\n            // no geometry\r\n            if (feature['geometry'] === undefined) {\r\n                continue;\r\n            }\r\n\r\n            // get the coordinates\r\n            feature.geometry.coordinates.forEach((v, i) => {\r\n                if (i % 3 < 2) {\r\n                    this._positionBuffer.push(v);\r\n                }\r\n                else {\r\n                    this._positionBuffer.push(v + this._height * 2);\r\n                }\r\n            });\r\n\r\n            const posSize = feature.geometry.coordinates.length;\r\n            // get the colors\r\n            for (let id = 0; id < posSize / this._COORDS; id++) {\r\n                this._colorBuffer.push(...rgb);\r\n            }\r\n\r\n            // build the indices\r\n            const indices = feature.geometry.indices;\r\n            if (indices) {\r\n                if (this._renderStyle === 'smooth') {\r\n                    for (let id = 0; id < indices.length; id++) {\r\n                        const globalId = indices[id] + nverts;\r\n                        this._indexBuffer.push(globalId);\r\n                    }\r\n                } else if (this._renderStyle === 'wireframe') {\r\n                    for (let id = 0; id < indices.length; id += 3) {\r\n                        const glId_0 = indices[id] + nverts;\r\n                        const glId_1 = indices[id + 1] + nverts;\r\n                        const glId_2 = indices[id + 2] + nverts;\r\n                        this._indexBufferWire.push(glId_0, glId_1, glId_1, glId_2, glId_2, glId_0);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // build the normal buffer\r\n            const normals = feature.geometry.normals;\r\n            if (this._type === LayerTypes.TRIANGLE_3D_LAYER && normals) {\r\n                for (let nId = 0; nId < normals.length / this._COORDS; nId++) {\r\n                    const nx = normals[3 * nId + 0];\r\n                    const ny = normals[3 * nId + 1];\r\n                    const nz = normals[3 * nId + 2];\r\n\r\n                    this._normalBuffer.push(nx, ny, nz);\r\n                }\r\n            }\r\n            // loaded vertices\r\n            nverts += posSize / this._COORDS;\r\n        }\r\n        \r\n        // build the normal geometry\r\n        if (this._renderNormal) {\r\n            const deltaX = 1 / 585.54; // zoom level = 10.\r\n            const deltaZ = 10;\r\n            this._normalRenderBuffer = [];\r\n\r\n            for (let vId = 0; vId < this._positionBuffer.length / this._COORDS; vId++) {\r\n                const px = this._positionBuffer[3 * vId + 0];\r\n                const py = this._positionBuffer[3 * vId + 1];\r\n                const pz = this._positionBuffer[3 * vId + 2];\r\n\r\n                const nx = px + deltaX * this._normalBuffer[3 * vId + 0];\r\n                const ny = py + deltaX * this._normalBuffer[3 * vId + 1];\r\n                const nz = pz + deltaZ * this._normalBuffer[3 * vId + 2];\r\n\r\n                this._normalRenderBuffer.push(px, py, pz, nx, ny, nz)\r\n            }\r\n        }\r\n\r\n        // creates the buffer\r\n        this.createBuffers(glContext);\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Function update implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     * @param {IFeatureData[]} data layer function\r\n     * @param {ColorMapTypes} cmap used color map\r\n     */\r\n    async updateFunction(glContext: WebGL2RenderingContext, data: IFeatureData[], cmap: ColorMapTypes = ColorMapTypes.SEQUENTIAL_RED_MAP): Promise<void> { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        // gets the feature of index id\r\n        const feats = data === undefined ? await DataApi.getLayerFunction(this._layerId) : data;\r\n\r\n        // new feature found\r\n        this._colorBuffer = [];\r\n\r\n        // fill the function array\r\n        for (const feature of feats) {\r\n            if (feature['scalar'] === undefined) {\r\n                continue;\r\n            }\r\n            // get the function values\r\n            const scalar = feature.scalar;\r\n\r\n            // min and max values\r\n            const min = Math.min(...scalar);\r\n            const max = Math.max(...scalar);\r\n\r\n            // normalize colors\r\n            scalar.map((val) => {\r\n                const nrm = (val - min) / (max - min);\r\n                const rgb = ColorMap.getColor(nrm, cmap);\r\n                this._colorBuffer.push(...rgb);\r\n            });\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Style update implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n     async highlight(glContext: WebGL2RenderingContext, ids: number[]): Promise<void> {\r\n        // new feature found\r\n        if (this._colorBuffer.length === 0) {\r\n            console.log(\"ERROR!!!!@\")\r\n            return;\r\n        };\r\n\r\n        // fill the function array\r\n        for (const vid of ids) {\r\n            // get the function values\r\n            const rgb = MapStyle.getHighlightColor();\r\n            \r\n            this._colorBuffer[3 * vid + 0] = rgb[0];\r\n            this._colorBuffer[3 * vid + 1] = rgb[1];\r\n            this._colorBuffer[3 * vid + 2] = rgb[2];\r\n\r\n            this._colorBuffer[3 * vid + 0] = rgb[0];\r\n            this._colorBuffer[3 * vid + 1] = rgb[1];\r\n            this._colorBuffer[3 * vid + 2] = rgb[2];\r\n\r\n            this._colorBuffer[3 * vid + 0] = rgb[0];\r\n            this._colorBuffer[3 * vid + 1] = rgb[1];\r\n            this._colorBuffer[3 * vid + 2] = rgb[2];\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    /**\r\n     * Style update implementation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    updateStyle(glContext: WebGL2RenderingContext): void {\r\n        // gets the new color\r\n        const rgb = MapStyle.getColor(this.style);\r\n        //\r\n        const size = this._colorBuffer.length / 3;\r\n        this._colorBuffer = [];\r\n\r\n        for (let id = 0; id < size; id++) {\r\n            this._colorBuffer.push(...rgb);\r\n        }\r\n\r\n        // creates the scalar data vbo\r\n        this.createColorBuffer(glContext);\r\n    }\r\n\r\n    computeNormal(p0: number[], p1: number[], p2: number[]): number[] {\r\n        const nrm = [0, 0, 0];\r\n\r\n        const Ax = p0[0] - p1[0];\r\n        const Ay = p0[1] - p1[1];\r\n        const Az = p0[2] - p1[2];\r\n\r\n        const Bx = p2[0] - p1[0];\r\n        const By = p2[1] - p1[1];\r\n        const Bz = p2[2] - p1[2];\r\n\r\n        const Nx = Ay * Bz - Az * By\r\n        const Ny = Az * Bx - Ax * Bz\r\n        const Nz = Ax * By - Ay * Bx\r\n\r\n        let length = Math.sqrt(Nx * Nx + Ny * Ny + Nz * Nz);\r\n        length = length === 0 ? 1 : length;\r\n\r\n        nrm[0] = Nx / length;\r\n        nrm[1] = Ny / length;\r\n        nrm[2] = Nz / length;\r\n\r\n        return nrm;\r\n    }\r\n\r\n    /**\r\n     * Layer render function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    render(glContext: WebGL2RenderingContext): void {\r\n        // invalid layers\r\n        if (!this._shaderProgram.length) {\r\n            return;\r\n        }\r\n\r\n        // enables the depth test\r\n        glContext.enable(glContext.DEPTH_TEST);\r\n        glContext.depthFunc(glContext.LEQUAL);\r\n\r\n        // enable culling\r\n        glContext.frontFace(glContext.CCW);\r\n        glContext.enable(glContext.CULL_FACE);\r\n        glContext.cullFace(glContext.FRONT)\r\n\r\n        this.renderMesh(glContext);\r\n        this.renderNormals(glContext);\r\n\r\n        // disables the depth test\r\n        glContext.disable(glContext.DEPTH_TEST);\r\n        // disables culling\r\n        glContext.disable(glContext.CULL_FACE);\r\n    }\r\n\r\n    /**\r\n     * Layer picking function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     * @param {number} x Mouse x coordinate\r\n     * @param {number} y Mouse y coordinate\r\n     */\r\n    pick(glContext: WebGL2RenderingContext, x: number, y: number): void { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        // TODO.\r\n    }\r\n\r\n    /**\r\n     * Layer render function signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected renderMesh(glContext: WebGL2RenderingContext): void {\r\n        // mesh shader\r\n        this.setUniforms(glContext, 0);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        glContext.vertexAttribPointer(this._positionId, this._COORDS, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._positionId);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glNormalBuffer);\r\n        glContext.vertexAttribPointer(this._normalId, this._COORDS, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._normalId);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        glContext.vertexAttribPointer(this._colorId, 3, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._colorId);\r\n\r\n        // renders the layer using smooth lighting\r\n        if (this._renderStyle === 'smooth') {\r\n            glContext.bindBuffer(glContext.ELEMENT_ARRAY_BUFFER, this._glIndexBuffer);\r\n            // draw the geometry\r\n            glContext.drawElements(glContext.TRIANGLES, this._indexBuffer.length, glContext.UNSIGNED_INT, 0);\r\n        }\r\n        // renders the layer in wireframe \r\n        else if (this._renderStyle === 'wireframe') {\r\n            glContext.bindBuffer(glContext.ELEMENT_ARRAY_BUFFER, this._glIndexBufferWire);\r\n            // draw the geometry\r\n            glContext.drawElements(glContext.LINES, this._indexBufferWire.length, glContext.UNSIGNED_INT, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send uniforms to the shader\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected renderNormals(glContext: WebGL2RenderingContext): void {\r\n        // normals shader\r\n        this.setUniforms(glContext, 1);\r\n\r\n        // binds the position buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glNormalRenderBuffer);\r\n        glContext.vertexAttribPointer(this._positionId, this._COORDS, glContext.FLOAT, false, 0, 0);\r\n        glContext.enableVertexAttribArray(this._positionId);\r\n\r\n        // draw the geometry\r\n        glContext.drawArrays(glContext.LINES, 0, this._normalRenderBuffer.length);\r\n    }\r\n\r\n    /**\r\n     * Send uniforms to the shader\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected setUniforms(glContext: WebGL2RenderingContext, shaderId: number): void {\r\n        if (this._shaderProgram.length <= shaderId) {\r\n            return;\r\n        }\r\n        // choose the shader program\r\n        glContext.useProgram(this._shaderProgram[shaderId]);\r\n\r\n        // uniforms definition\r\n        this._positionId = glContext.getAttribLocation(this._shaderProgram[shaderId], 'vertPos');\r\n        this._colorId = glContext.getAttribLocation(this._shaderProgram[shaderId], 'vertRgb');\r\n        this._normalId = glContext.getAttribLocation(this._shaderProgram[shaderId], 'vertNrm');\r\n\r\n        this._uModelViewMatrixId = glContext.getUniformLocation(this._shaderProgram[shaderId], 'uModelViewMatrix');\r\n        glContext.uniformMatrix4fv(this._uModelViewMatrixId, false, this._camera.getModelViewMatrix());\r\n\r\n        this._uProjectionMatrixId = glContext.getUniformLocation(this._shaderProgram[shaderId], 'uProjectionMatrix');\r\n        glContext.uniformMatrix4fv(this._uProjectionMatrixId, false, this._camera.getProjectionMatrix());\r\n\r\n        const worldOrigin = this._camera.getWorldOrigin();\r\n        this._uWorldOrigin = glContext.getUniformLocation(this._shaderProgram[shaderId], 'uWorldOrigin');\r\n        glContext.uniform2f(this._uWorldOrigin, worldOrigin[0], worldOrigin[1]);\r\n    }\r\n\r\n    /**\r\n     * Layer VBO creation signature\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createBuffers(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the positions.\r\n        this._glPositionBuffer = glContext.createBuffer();\r\n        // Select the positionBuffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glPositionBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._positionBuffer), glContext.STATIC_DRAW\r\n        );\r\n\r\n        // Create a buffer for the normals.\r\n        this._glNormalBuffer = glContext.createBuffer();\r\n        // Select the positionBuffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glNormalBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._normalBuffer), glContext.STATIC_DRAW\r\n        );\r\n\r\n        // Create a buffer for the positions.\r\n        this._glNormalRenderBuffer = glContext.createBuffer();\r\n        // Select the positionBuffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glNormalRenderBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._normalRenderBuffer), glContext.STATIC_DRAW\r\n        );\r\n\r\n        // Create a buffer for the indices.\r\n        this._glIndexBuffer = glContext.createBuffer();\r\n        // Select the index buffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ELEMENT_ARRAY_BUFFER, this._glIndexBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ELEMENT_ARRAY_BUFFER, new Uint32Array(this._indexBuffer), glContext.STATIC_DRAW);\r\n\r\n        // Create a buffer for the indices.\r\n        this._glIndexBufferWire = glContext.createBuffer();\r\n        // Select the index buffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ELEMENT_ARRAY_BUFFER, this._glIndexBufferWire);\r\n        // send data to gpu\r\n        glContext.bufferData(glContext.ELEMENT_ARRAY_BUFFER, new Uint32Array(this._indexBufferWire), glContext.STATIC_DRAW);\r\n    }\r\n\r\n    /**\r\n     * Scalar data vbo creation\r\n     * @param {WebGL2RenderingContext} glContext WebGL context\r\n     */\r\n    protected createColorBuffer(glContext: WebGL2RenderingContext): void {\r\n        // Create a buffer for the colors.\r\n        this._glColorBuffer = glContext.createBuffer();\r\n        // Select the color buffer as the one to apply buffer\r\n        glContext.bindBuffer(glContext.ARRAY_BUFFER, this._glColorBuffer);\r\n        // send data to gpu\r\n        glContext.bufferData(\r\n            glContext.ARRAY_BUFFER, new Float32Array(this._colorBuffer), glContext.STATIC_DRAW\r\n        );\r\n    }\r\n}\r\n","// layers base classes\r\nimport { Layer } from './layer';\r\nimport { LayerTypes } from './constants';\r\nimport { ILayerData } from './interfaces';\r\n\r\n// layer types\r\nimport { LineLayer } from './line-layer';\r\nimport { PointLayer } from './point-layer';\r\nimport { TriangleLayer } from './triangle-layer';\r\n\r\n\r\nexport class LayerManager {\r\n    // Loaded layers\r\n    protected _layers: Layer[] = [];\r\n\r\n    /**\r\n     * Layers vector accessor\r\n     * @returns {Layer[]} The array of layers\r\n     */\r\n    get layers(): Layer[] {\r\n        return this._layers;\r\n    }\r\n\r\n    /**\r\n    * Creates a layer from the server\r\n    * @param {string} layerType layer type\r\n    * @param {string} layerId layer identifier\r\n    * @returns {Layer | null} The load layer promise\r\n    */\r\n    createLayer(layerInfo: ILayerData): Layer | null {\r\n        // loaded layer\r\n        let layer = null;\r\n\r\n        // loads based on type\r\n        switch (layerInfo.type) {\r\n            case LayerTypes.TRIANGLE_2D_LAYER:\r\n            case LayerTypes.TRIANGLE_3D_LAYER:\r\n                layer = new TriangleLayer(layerInfo);\r\n                break;\r\n            case LayerTypes.LINE_LAYER:\r\n                layer = new LineLayer(layerInfo);\r\n                break;\r\n            case LayerTypes.POINT_LAYER:\r\n                layer = new PointLayer(layerInfo);\r\n                break;\r\n            default:\r\n                console.error(`File ${layerInfo.id}.json has an unknown layer type: ${layerInfo.type}.`);\r\n                break;\r\n        }\r\n\r\n        if (layer) {\r\n            // adds the the list of layers\r\n            this._layers.push(layer);\r\n        }\r\n\r\n        // returns the layer\r\n        return layer;\r\n    }\r\n}\r\n","import { MapView } from './mapview';\r\nimport { MapViewStatus } from './constants';\r\n\r\nexport class MouseEvents {\r\n  // div to attach the events\r\n  private _map: MapView;\r\n\r\n  // mouse movement control.\r\n  private _status: MapViewStatus;\r\n  private _lastPoint: number[];\r\n\r\n  /**\r\n   * Mouse events constructor\r\n   * @param {MapView} map the map to bind the events\r\n   */\r\n  constructor(map: MapView) {\r\n    // map reference\r\n    this._map = map;\r\n\r\n    // default values\r\n    this._status = MapViewStatus.IDLE;\r\n    this._lastPoint = [0, 0];\r\n  }\r\n\r\n  /**\r\n   * Mouse events binding function\r\n   */\r\n  bindEvents(): void {\r\n    // sets the canvas listeners\r\n    this._map.canvas.addEventListener('wheel', this.mouseWheel.bind(this), false);\r\n    this._map.canvas.addEventListener('mousedown', this.mouseDown.bind(this), false);\r\n    this._map.canvas.addEventListener('contextmenu', this.contextMenu.bind(this), false);\r\n    this._map.canvas.addEventListener('mousemove', this.mouseMove.bind(this), false);\r\n\r\n    // sets the document listeners\r\n    document.addEventListener('mouseup', this.mouseUp.bind(this), false);\r\n  }\r\n\r\n  /**\r\n   * Handles mouse right click event\r\n   * @param {MouseEvent} event The fired event\r\n   */\r\n  contextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Handles mouse down event\r\n   * @param {MouseEvent} event The fired event\r\n   */\r\n  mouseDown(event: MouseEvent): void {\r\n    // captures the event.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this._lastPoint = [event.offsetX, event.offsetY];\r\n\r\n    if (event.ctrlKey) {\r\n      const x = event.offsetX;\r\n      const y = (this._map.canvas.height - event.offsetY);\r\n\r\n      for (const layer of this._map.layerManager.layers) {\r\n        if (!layer.selectable) { continue; }\r\n        layer.pick(this._map.glContext, x, y);\r\n      }\r\n    } else {\r\n      this._status = MapViewStatus.DRAG;\r\n    }\r\n\r\n    this._map.render();\r\n  }\r\n\r\n  /**\r\n   * Handles mouse move event\r\n   * @param {MouseEvent} event The fired event\r\n   */\r\n  mouseMove(event: MouseEvent): void {\r\n    // captures the event.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // changes the values\r\n    if (this._status === MapViewStatus.DRAG) {\r\n      const dx = (-event.offsetX + this._lastPoint[0]);\r\n      const dy = event.offsetY - this._lastPoint[1];\r\n\r\n      if (event.buttons === 1 && event.shiftKey) { // left button\r\n        this._map.camera.yaw(dx / this._map.canvas.clientWidth);\r\n        this._map.camera.pitch(dy / this._map.canvas.clientHeight);\r\n      } else {\r\n        this._map.camera.translate(dx / this._map.canvas.clientWidth, dy / this._map.canvas.clientHeight);\r\n      }\r\n\r\n      this._lastPoint = [event.offsetX, event.offsetY];\r\n      this._map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles mouse up event\r\n   */\r\n  mouseUp(event: MouseEvent): void {\r\n    // captures the event.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // changes the values\r\n    this._status = MapViewStatus.IDLE;\r\n    this._map.render();\r\n  }\r\n\r\n  /**\r\n   * Handles mouse down event\r\n   * @param {WheelEvent} event The fired event\r\n   */\r\n  mouseWheel(event: WheelEvent): void {\r\n    // captures the event.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    // changes the values\r\n    const maxAxisLength = Math.max(this._map.canvas.clientWidth, this._map.canvas.clientHeight);\r\n    const x = event.offsetX / maxAxisLength;\r\n    const y = (this._map.canvas.height - event.offsetY) / maxAxisLength;\r\n\r\n    this._map.camera.zoom(event.deltaY * 0.01, x, y);\r\n    this._map.render();\r\n  }\r\n}\r\n","/// <reference types=\"@types/webgl2\" />\r\n\r\nimport { Camera } from './camera';\r\nimport { MapStyle } from './map-style';\r\n\r\nimport { KeyEvents } from './key-events';\r\nimport { MouseEvents } from './mouse-events';\r\n\r\nimport { DataApi } from './data-api';\r\nimport { LayerManager } from './layer-manager';\r\n\r\nimport { IMapRefs, IMapData, ICameraData, ILayerData, IStyle } from './interfaces';\r\n\r\n\r\nexport class MapView {\r\n    // Html div that will host the map\r\n    protected _mapDiv: HTMLElement;\r\n    // Html canvas used to draw the map\r\n    protected _canvas: HTMLCanvasElement;\r\n    // WebGL context of the canvas\r\n    public _glContext: WebGL2RenderingContext;\r\n\r\n    // Layer manager object\r\n    protected _layerManager: LayerManager;\r\n\r\n    // interaction variables\r\n    private _camera: Camera;\r\n    // mouse events\r\n    private _mouse: MouseEvents;\r\n    // keyboard events\r\n    private _keyboard: KeyEvents;\r\n\r\n    /**\r\n     * MapView constructor\r\n     * @param {HTMLElement} mapDiv The html element to hold the map.\r\n     */\r\n    constructor(mapDiv: HTMLElement) {\r\n        // stores the map div\r\n        this._mapDiv = mapDiv;\r\n        // creates the new canvas element\r\n        this._canvas = document.createElement('canvas');\r\n        // gets the webgl context\r\n        this._glContext = <WebGL2RenderingContext>this._canvas.getContext('webgl2');\r\n        // appends the canvas\r\n        this._mapDiv.appendChild(this._canvas);\r\n        // creates the manager\r\n        this._layerManager = new LayerManager();\r\n\r\n        // inits the mouse events\r\n        this.initMouseEvents();\r\n        // bind the window events\r\n        this.initWindowEvents();\r\n    }\r\n\r\n    /**\r\n     * gets the map div\r\n     */\r\n    get div(): HTMLElement {\r\n        return this._mapDiv;\r\n    }\r\n\r\n    /**\r\n     * gets the canvas element\r\n     */\r\n    get canvas(): HTMLCanvasElement {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * gets the opengl context\r\n     */\r\n    get glContext(): WebGL2RenderingContext {\r\n        return this._glContext;\r\n    }\r\n\r\n    /**\r\n     * gets the camera object\r\n     */\r\n    get camera(): Camera {\r\n        return this._camera;\r\n    }\r\n\r\n    /**\r\n     * gets the layers\r\n     */\r\n    get layerManager(): LayerManager {\r\n        return this._layerManager;\r\n    }\r\n\r\n    /**\r\n     * Map initialization function\r\n     * @param {IMapData | null} data Object containing the camera and layers. If data is null, then it tries to load data from disk.\r\n     */\r\n    async initMapView(data: IMapRefs | IMapData): Promise<void> {\r\n        if (data === null) {\r\n            console.error('Map data not provided.')\r\n            return;\r\n        }\r\n\r\n        // set the map style\r\n        const style = ('style' in data ? data['style'] : 'default') as string;\r\n        MapStyle.setColor(style);\r\n\r\n        // inits the camera\r\n        await this.initCamera(data.camera);\r\n\r\n        // inits the layers\r\n        await this.initLayers(data.layers);\r\n\r\n        // resizes the canvas\r\n        this.resize();\r\n    }\r\n\r\n    /**\r\n     * Camera initialization function\r\n     * @param {string | ICameraData} data Object containing the camera. If data is a string, then it loads data from disk.\r\n     */\r\n    async initCamera(camera: ICameraData | string): Promise<void> {\r\n        // load the index file and its layers\r\n        const params = typeof camera === 'string' ? await DataApi.getCameraParameters(camera) : camera;\r\n        // sets the camera\r\n        this._camera = new Camera(params.coordinates[0][0], params.coordinates[0][1]);\r\n        // renders the scene\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * Map layers initialization\r\n     * @param {string[] | ILayerData[]} data Object containing the layers. If data is null, then it tries to load data from disk.\r\n     */\r\n    async initLayers(layers: string[] | ILayerData[]): Promise<void> {\r\n\r\n        // loop over the index file\r\n        for (const element of layers) {\r\n\r\n            const layer = typeof element === 'string' ? await DataApi.getLayer(element) : element;\r\n\r\n            // skips the layer\r\n            if ('skip' in layer && layer['skip']) {\r\n                continue;\r\n            }\r\n\r\n            // adds the new layer\r\n            await this.addLayer(layer);\r\n            // renders the layer\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add layer geometry and function function\r\n     */\r\n    async addLayer(layerInfo: ILayerData): Promise<void> {\r\n        // gets the layer geometry if available\r\n        const features = 'data' in layerInfo ? layerInfo.data : undefined;\r\n\r\n        // loads the layers data\r\n        const layer = this._layerManager.createLayer(layerInfo);\r\n        // not able to create the layer\r\n        if (!layer) { return; }\r\n\r\n        // loads the shaders\r\n        await layer.loadShaders(this._glContext);\r\n        // update the features\r\n        layer.updateFeatures(this._glContext, features);\r\n\r\n        // render\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * update layer function function\r\n     */\r\n    async updateLayerFunction(layerInfo: ILayerData): Promise<void> {\r\n        // searches the layer\r\n        let layer = null;\r\n        for (const lay of this._layerManager.layers) {\r\n            if (lay.layerId === layerInfo.id) {\r\n                layer = lay;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // gets the layer geometry if available\r\n        const features = 'data' in layerInfo ? layerInfo['data'] : null;\r\n        // not found or no data\r\n        if (layer === null || !features) { return; }\r\n\r\n        // update the function\r\n        layer.updateFunction(this._glContext, features);\r\n\r\n        // render\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * update layer function function\r\n     */\r\n     highlight(name: string, ids: number[]): void {\r\n        // searches the layer\r\n        let layer = null;\r\n        for (const lay of this._layerManager.layers) {\r\n            console.log(lay.layerId, name)\r\n            if (lay.layerId === name) {\r\n                layer = lay;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(layer) {\r\n            console.log(layer);\r\n            // update the function\r\n            layer.highlight(this._glContext, ids);\r\n\r\n            // render\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update layer function function\r\n     */\r\n     resetColors(name: string, ids: number[]): void {\r\n        // searches the layer\r\n        let layer = null;\r\n        for (const lay of this._layerManager.layers) {\r\n            console.log(lay.layerId, name)\r\n            if (lay.layerId === name) {\r\n                layer = lay;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(layer) {\r\n            console.log(layer);\r\n            // update the function\r\n            layer.updateStyle(this._glContext);\r\n\r\n            // render\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inits the mouse events\r\n     */\r\n    initMouseEvents(): void {\r\n        // creates the mouse events manager\r\n        this._mouse = new MouseEvents(this);\r\n        // binds the mouse events\r\n        this._mouse.bindEvents();\r\n    }\r\n\r\n    /**\r\n     * Inits the mouse events\r\n     */\r\n    initKeyboardEvents(): void {\r\n        // creates the mouse events manager\r\n        this._keyboard = new KeyEvents(this);\r\n        // binds the mouse events\r\n        this._keyboard.bindEvents();\r\n    }\r\n\r\n    /**\r\n     * inits the window events\r\n     */\r\n    initWindowEvents(): void {\r\n        // resize listener\r\n        window.addEventListener('resize', () => {\r\n            // resizes the canvas\r\n            this.resize();\r\n            this.render();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Renders the map\r\n     */\r\n    render(): void {\r\n        if (!this._camera) {\r\n            return;\r\n        }\r\n\r\n        // sky\r\n        const sky = MapStyle.getColor('sky').concat([1.0]);\r\n        this._glContext.clearColor(sky[0], sky[1], sky[2], sky[3]);\r\n        // tslint:disable-next-line:no-bitwise\r\n        this._glContext.clear(this._glContext.COLOR_BUFFER_BIT | this._glContext.DEPTH_BUFFER_BIT);\r\n\r\n        // updates the camera\r\n        this._camera.update();\r\n        // render the layers\r\n        for (const layer of this._layerManager.layers) {\r\n            // skips based on visibility\r\n            if (!layer.visible) { continue; }\r\n\r\n            // sends the camera\r\n            layer.camera = this.camera;\r\n\r\n            // render\r\n            layer.render(this._glContext);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resizes the html canvas\r\n     */\r\n    resize(): void {\r\n        const targetWidth = this._mapDiv.clientWidth;\r\n        const targetHeight = this._mapDiv.clientHeight;\r\n\r\n        const value = Math.max(targetWidth, targetHeight);\r\n        this._glContext.viewport(0, 0, value, value);\r\n        //\r\n        this._canvas.width = targetWidth;\r\n        this._canvas.height = targetHeight;\r\n\r\n        // stores in the camera\r\n        this._camera.setViewportResolution(targetWidth, targetHeight);\r\n    }\r\n\r\n    /**\r\n     * Changes the map style.\r\n     */\r\n    async changeStyle(name: string, data?: IStyle): Promise<void> {\r\n        await MapStyle.setColor(name, data);\r\n\r\n        for (const layer of this._layerManager.layers) {\r\n            layer.updateStyle(this._glContext);\r\n        }\r\n\r\n        this.render();\r\n    }\r\n}\r\n"],"names":["create","glMatrix.ARRAY_TYPE","glMatrix.EPSILON","fromValues","vec2.create","vec3.create","mat4.create","vec2.fromValues","vec3.fromValues","mat4.mul","vec3.sub","vec3.length","vec3.normalize","vec3.scaleAndAdd","scale","vec3.cross","vec3.add","vec3.scale","vec3.rotateZ","mat4.fromScaling","mat4.lookAt","mat4.perspective","colorRgb","basis","interpolateRgbBasis","scheme","d3.interpolateReds","d3.interpolateBlues","vsShader","fsShader"],"mappings":"MAAa,WAAW,CAAA;AAKtB;;;AAGG;IACI,OAAO,cAAc,CAAC,GAA0C,EAAA;AACrE,QAAA,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AAClC,QAAA,WAAW,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;KACzC;;AAXD;AACc,WAAO,CAAA,OAAA,GAAG,WAAW,CAAC;AACtB,WAAU,CAAA,UAAA,GAAG,SAAS;;MCFhB,QAAQ,CAAA;AAG5B;;;;AAIG;AACI,IAAA,OAAO,gBAAgB,CAAC,QAAgB,EAAE,SAAiB,EAAA;QAChE,MAAM,IAAI,GAAG,2DAA2D,CAAC;QACzE,MAAM,MAAM,GAAG,2DAA2D,CAAC;QAE3E,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;AAChD,QAAA,MAAM,MAAM,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,WAAW,KAAK,GAAG,GAAG,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;AACtG,QAAA,MAAM,MAAM,GAAG,CAAC,CAAC,SAAS,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC;AACrD,QAAA,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACzB;AAEM,IAAA,OAAO,YAAY,CAAC,QAAgB,EAAC,SAAiB,EAAA;QAC3D,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAA,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;AACpB,SAAA;AAAM,aAAA,IAAI,QAAQ,IAAI,CAAC,IAAI,EAAE;YAC1B,CAAC,GAAG,GAAG,CAAC;AACX,SAAA;AAAM,aAAA;AACH,YAAA,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;AACjG,SAAA;QAED,OAAO;YACH,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;YAChC,EAAE,SAAS,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;SAC7E,CAAC;KACH;AAGD;;;;AAIG;AACI,IAAA,OAAO,gBAAgB,CAAC,CAAS,EAAE,CAAS,EAAA;QACjD,MAAM,IAAI,GAAG,2DAA2D,CAAC;QACzE,MAAM,MAAM,GAAG,2DAA2D,CAAC;AAE3E,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,CAAC;QACvD,IAAI,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC;AAC1C,QAAA,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,IAAI,IAAI,CAAC,CAAC;AAC7C,QAAA,QAAQ,GAAG,CAAC,QAAQ,GAAG,GAAG,KAAK,GAAG,GAAG,QAAQ,CAAC,CAAC;QAC/C,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;AACxC,QAAA,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9B;AAEM,IAAA,OAAO,YAAY,CAAC,CAAS,EAAE,CAAS,EAAA;QAC7C,OAAO;AACH,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;YAC/E,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG;SACjD,CAAC;KACH;AAED;;;;;AAKG;AACI,IAAA,OAAO,gBAAgB,CAAC,GAAW,EAAE,GAAW,EAAE,IAAY,EAAA;AACnE,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAClF;;AAlEM,QAAG,CAAA,GAAA,GAAG,KAAK,CAAC;AACZ,QAAM,CAAA,MAAA,GAAG,EAAE;;ACHpB;AACA;AACA;AACA;AACA;AACO,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,IAAI,UAAU,GAAG,OAAO,YAAY,KAAK,WAAW,GAAG,YAAY,GAAG,KAAK,CAAC;AAkCnF,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,YAAY;AAC1C,EAAE,IAAI,CAAC,GAAG,CAAC;AACX,MAAM,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;AAC3B;AACA,EAAE,OAAO,CAAC,EAAE,EAAE;AACd,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACrC,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;;AChDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,QAAM,GAAG;AACzB,EAAE,IAAI,GAAG,GAAG,IAAIC,UAAmB,CAAC,EAAE,CAAC,CAAC;AACxC;AACA,EAAE,IAAIA,UAAmB,IAAI,YAAY,EAAE;AAC3C,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAChB,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAChB,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAChB,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAChB,GAAG;AACH;AACA,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AA2ID;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE;AAC9B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AAoMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;AACpC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACjB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACjB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACjB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACjB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB;AACA,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GA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"}